apply plugin: 'com.android.library'
apply plugin: 'com.apollographql.android'

android {
    compileSdkVersion 26



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

task loadSchema(type: Exec, dependsOn: assemble) {
    def schemaPath = "${projectDir}/src/main/graphql" + "/data/"
    def output = '--output ' + schemaPath
    def hashStdOut = new ByteArrayOutputStream()
    def serverUrl = 'http://smbdev-env-3.eu-central-1.elasticbeanstalk.com/v1/graphql'
    def isWin = System.properties['os.name'].toLowerCase().contains('windows')
    exec {
        workingDir schemaPath
        ignoreExitValue true
        if (isWin) {
            commandLine 'cmd', '/c', 'apollo-codegen', 'download-schema', serverUrl, output, '--header', 'Authorization: Bearer testme'
        } else {
            commandLine 'apollo-codegen', 'download-schema', serverUrl, output, '--header', 'Authorization: Bearer testme'
        }
        standardOutput = hashStdOut
    }
    println hashStdOut.toString().trim()
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.apollographql.apollo:apollo-runtime:$versions.apolloPlugin"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
